{
  "openapi": "3.0.1",
  "info": {
    "title": "InterChoice API",
    "description": "Here you can find API documentation for our service",
    "license": {
      "name": "Our Team"
    },
    "version": "v1"
  },
  "paths": {
    "/Test": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/CreateProject": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create project handle",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShortDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FullDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Overview": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Overview": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "200 (4)": {
            "description": "Successful created project"
          },
          "403 (140)": {
            "description": "Exception message"
          }
        }
      }
    },
    "/Register": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Register new user",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403 (100)": {
            "description": "'@email' is not valid email"
          },
          "403 (110)": {
            "description": "'@email' is already in use"
          },
          "200 (1)": {
            "description": "Successful register for: '@email'"
          },
          "403 (120)": {
            "description": "Something went wrong while saving user to database: '@email'"
          }
        }
      }
    },
    "/Login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Login user using credentionals: password and email",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "200 (2)": {
            "description": "Successful login, returns token in value field"
          },
          "403 (130)": {
            "description": "Email or password is incorrect"
          }
        }
      }
    },
    "/Logout": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Logout handler",
        "responses": {
          "200": {
            "description": "Success"
          },
          "200 (3)": {
            "description": "Logout complete"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginViewModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "additionalProperties": false
      },
      "RegisterViewModel": {
        "required": [
          "birthDate",
          "confirmPassword",
          "country",
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password"
          }
        },
        "additionalProperties": false
      }
    }
  }
}